buildscript {
    ext {
        springBootVersion = "2.1.3.RELEASE"
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE"
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.0.1"
    }

}


apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.junit.platform.gradle.plugin'


group = 'com.address.parser'
version = '1.0.0-SNAPSHOT'
description = """ Address Parser """
sourceCompatibility = 11
targetCompatibility = 11

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude(module: 'spring-boot-starter-tomcat')
    }
    compile "org.springframework.boot:spring-boot-starter-jetty"

    // Need it by Java 9+ modules
    compile "javax.xml.bind:jaxb-api:2.3.0"
    compile "javax.annotation:javax.annotation-api:1.3.2"

    // Extras
    compileOnly 'org.projectlombok:lombok:1.18.6'
    annotationProcessor 'org.projectlombok:lombok:1.18.6'
    compile "org.jetbrains:annotations:16.0.+"
    compile "org.codehaus.janino:janino:3.0.0"

    // test
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.junit.jupiter:junit-jupiter-api")
    testRuntime("org.junit.jupiter:junit-jupiter-engine")
    testRuntime("org.junit.platform:junit-platform-launcher:1.4.0")

}

test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter'
        excludeEngines 'junit-vintage'
    }
}

